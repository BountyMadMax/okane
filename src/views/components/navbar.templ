package components

import "strconv"

type NavbarGroupData struct {
	Label string
	Href  string
	Id    string
	Icon  string
	Open  bool
	Items []NavbarGroupItemData
}

type NavbarGroupItemData struct {
	Label string
	Href  string
	Icon  string
}

templ Navbar(open bool, groups []NavbarGroupData) {
	<aside class="w-fit h-full text-surface-50 bg-surface-900">
		<ul>
			for _, group := range groups {
				@NavbarGroup(group)
			}
		</ul>
		<div>
			<button hx-post={ "/navbar/toggle?open=" + strconv.FormatBool(open) }>
				if open {
					<i class="icon-chevron-left"></i>
				} else {
					<i class="icon-chevron-right"></i>
				}
			</button>
		</div>
	</aside>
}

templ NavbarGroup(group NavbarGroupData) {
	<li>
		<div class="flex">
			if group.Href != "" {
				<a href={ group.Href } class="p-2 w-full cursor-pointer">
					<i class={ group.Icon }></i>
					<span>
						{ group.Label }
					</span>
				</a>
				<button hx-post={ "/navbar-group/toggle?id=" + group.Id } class="p-2 flex justify-center items-center w-fit cursor-pointer">
					if group.Open {
						<i class="icon-chevron-down"></i>
					} else {
						<i class="icon-chevron-right"></i>
					}
				</button>
			} else {
				<button hx-post={ "/navbar-group/toggle?id=" + group.Id }>
					<i class={ group.Icon }></i>
					<span>{ group.Label }</span>
					if group.Open {
						<i class="icon-chevron-down"></i>
					} else {
						<i class="icon-chevron-right"></i>
					}
				</button>
			}
			if group.Open {
				<ul>
					for _, item := range group.Items {
						<li>
							<a href={ item.Href }>
								<i class={ item.Icon }></i>
								<span>{ item.Label }</span>
							</a>
						</li>
					}
				</ul>
			}
		</div>
	</li>
}
